services:
  backend:
    build: ./backend
    container_name: supplifit_backend
    restart: always
    volumes:
      - ./backend:/app
      - backend_static:/app/staticfiles
      - backend_media:/app/mediafiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn supplifit.wsgi:application --bind 0.0.0.0:8000 --workers 2 --threads 2 --timeout 120 --keep-alive 5 --log-level info"
    networks:
      - supplifit_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./supplifit-dark-design
    container_name: supplifit_frontend
    restart: always
    volumes:
      - ./supplifit-dark-design:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_API_URL=http://localhost:8000
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=5173
    command: npm run dev -- --host 0.0.0.0
    networks:
      - supplifit_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    container_name: supplifit_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=supplifit
    ports:
      - "5432:5432"
    networks:
      - supplifit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  backend_static:
  backend_media:

networks:
  supplifit_network:
    driver: bridge 